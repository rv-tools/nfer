Index.PACKAGES = {"nfer" : [{"name" : "nfer.Interval", "shortDescription" : "Representation of intervals generated by nfer.", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "nfer.Interval.toString", "link" : "nfer\/Interval.html#toString():String", "kind" : "def"}, {"label" : "toStringCompressed", "tail" : "(): String", "member" : "nfer.Interval.toStringCompressed", "link" : "nfer\/Interval.html#toStringCompressed:String", "kind" : "def"}, {"label" : "toStringForTest", "tail" : "(): String", "member" : "nfer.Interval.toStringForTest", "link" : "nfer\/Interval.html#toStringForTest:String", "kind" : "def"}, {"label" : "isAtomic", "tail" : "(): Boolean", "member" : "nfer.Interval.isAtomic", "link" : "nfer\/Interval.html#isAtomic:Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(other: Interval): Boolean", "member" : "nfer.Interval.contains", "link" : "nfer\/Interval.html#contains(other:nfer.Interval):Boolean", "kind" : "def"}, {"member" : "nfer.Interval#<init>", "error" : "unsupported entity"}, {"label" : "data", "tail" : ": Map[String, Any]", "member" : "nfer.Interval.data", "link" : "nfer\/Interval.html#data:Map[String,Any]", "kind" : "val"}, {"label" : "end", "tail" : ": Sclk", "member" : "nfer.Interval.end", "link" : "nfer\/Interval.html#end:nfer.Sclk", "kind" : "val"}, {"label" : "begin", "tail" : ": Sclk", "member" : "nfer.Interval.begin", "link" : "nfer\/Interval.html#begin:nfer.Sclk", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "nfer.Interval.name", "link" : "nfer\/Interval.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "nfer\/Interval.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nfer\/Interval.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nfer\/Interval.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nfer\/Interval.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nfer\/Interval.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nfer\/Interval.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nfer\/Interval.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nfer\/Interval.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/Interval.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/Interval.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/Interval.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nfer\/Interval.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nfer\/Interval.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nfer\/Interval.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "nfer\/Interval.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nfer\/Interval.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nfer\/Interval.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "nfer\/Interval.html", "kind" : "case class"}, {"name" : "nfer.Main", "shortDescription" : "*******************", "object" : "nfer\/Main$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "nfer.Main.main", "link" : "nfer\/Main$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nfer\/Main$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nfer\/Main$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nfer\/Main$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nfer\/Main$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nfer\/Main$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nfer\/Main$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nfer\/Main$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/Main$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/Main$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/Main$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nfer\/Main$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nfer\/Main$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nfer\/Main$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nfer\/Main$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "nfer\/Main$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nfer\/Main$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "nfer\/Main$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nfer\/Main$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nfer\/Main$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "nfer.Nfer", "shortDescription" : "Class offering features for writing nfer specifications and applying them to atraces of events.", "members_class" : [{"label" : "printIntervals", "tail" : "(allIntervals: Boolean): Unit", "member" : "nfer.Nfer.printIntervals", "link" : "nfer\/Nfer.html#printIntervals(allIntervals:Boolean):Unit", "kind" : "def"}, {"label" : "getIntervalMap", "tail" : "(): Map[IntervalName, Set[Interval]]", "member" : "nfer.Nfer.getIntervalMap", "link" : "nfer\/Nfer.html#getIntervalMap:Map[nfer.repr.Util.IntervalName,Set[nfer.Interval]]", "kind" : "def"}, {"label" : "getIntervalsInTree", "tail" : "(name: IntervalName): List[Set[Interval]]", "member" : "nfer.Nfer.getIntervalsInTree", "link" : "nfer\/Nfer.html#getIntervalsInTree(name:nfer.repr.Util.IntervalName):List[Set[nfer.Interval]]", "kind" : "def"}, {"label" : "submit", "tail" : "(name: String, time: Sclk, data: (String, Any)*): Unit", "member" : "nfer.Nfer.submit", "link" : "nfer\/Nfer.html#submit(name:String,time:nfer.Sclk,data:(String,Any)*):Unit", "kind" : "def"}, {"label" : "submit", "tail" : "(name: String, time: Sclk, data: Data): Unit", "member" : "nfer.Nfer.submit", "link" : "nfer\/Nfer.html#submit(name:String,time:nfer.Sclk,data:nfer.repr.Util.Data):Unit", "kind" : "def"}, {"label" : "submit", "tail" : "(interval: Interval): Unit", "member" : "nfer.Nfer.submit", "link" : "nfer\/Nfer.html#submit(interval:nfer.Interval):Unit", "kind" : "def"}, {"label" : "submit", "tail" : "(intervals: List[Interval]): Unit", "member" : "nfer.Nfer.submit", "link" : "nfer\/Nfer.html#submit(intervals:List[nfer.Interval]):Unit", "kind" : "def"}, {"label" : "addOperation", "tail" : "(name: String)(operation: Operation): Unit", "member" : "nfer.Nfer.addOperation", "link" : "nfer\/Nfer.html#addOperation(name:String)(operation:nfer.Operation):Unit", "kind" : "def"}, {"label" : "time", "tail" : "(block: => R): R", "member" : "nfer.Nfer.time", "link" : "nfer\/Nfer.html#time[R](block:=>R):R", "kind" : "def"}, {"label" : "readFromFile", "tail" : "(fileName: String): Iterator[String]", "member" : "nfer.Nfer.readFromFile", "link" : "nfer\/Nfer.html#readFromFile(fileName:String):Iterator[String]", "kind" : "def"}, {"label" : "specFile", "tail" : "(fileName: String): Nfer", "member" : "nfer.Nfer.specFile", "link" : "nfer\/Nfer.html#specFile(fileName:String):nfer.Nfer", "kind" : "def"}, {"label" : "specText", "tail" : "(text: String): Nfer", "member" : "nfer.Nfer.specText", "link" : "nfer\/Nfer.html#specText(text:String):nfer.Nfer", "kind" : "def"}, {"label" : "delay", "tail" : "(flag: Boolean): Nfer", "member" : "nfer.Nfer.delay", "link" : "nfer\/Nfer.html#delay(flag:Boolean):nfer.Nfer", "kind" : "def"}, {"label" : "dotDir", "tail" : "(dotDir: String): Nfer", "member" : "nfer.Nfer.dotDir", "link" : "nfer\/Nfer.html#dotDir(dotDir:String):nfer.Nfer", "kind" : "def"}, {"label" : "setMinimality", "tail" : "(value: Boolean): Unit", "member" : "nfer.Nfer.setMinimality", "link" : "nfer\/Nfer.html#setMinimality(value:Boolean):Unit", "kind" : "def"}, {"label" : "PRINT_SUBMIT", "tail" : ": Boolean", "member" : "nfer.Nfer.PRINT_SUBMIT", "link" : "nfer\/Nfer.html#PRINT_SUBMIT:Boolean", "kind" : "var"}, {"member" : "nfer.Nfer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nfer\/Nfer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nfer\/Nfer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nfer\/Nfer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nfer\/Nfer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nfer\/Nfer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nfer\/Nfer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nfer\/Nfer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/Nfer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/Nfer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/Nfer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nfer\/Nfer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nfer\/Nfer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nfer\/Nfer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nfer\/Nfer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "nfer\/Nfer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nfer\/Nfer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "nfer\/Nfer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nfer\/Nfer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nfer\/Nfer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "nfer\/Nfer.html", "kind" : "class"}, {"name" : "nfer.Operation", "trait" : "nfer\/Operation.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nfer\/Operation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nfer\/Operation.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nfer\/Operation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nfer\/Operation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nfer\/Operation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nfer\/Operation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nfer\/Operation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/Operation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/Operation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/Operation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nfer\/Operation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nfer\/Operation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nfer\/Operation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nfer\/Operation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "nfer\/Operation.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nfer\/Operation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "nfer\/Operation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nfer\/Operation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nfer\/Operation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(args: Any*): Any", "member" : "nfer.Operation.apply", "link" : "nfer\/Operation.html#apply(args:Any*):Any", "kind" : "abstract def"}], "shortDescription" : "User defined operations."}], "nfer.util" : [{"name" : "nfer.util.CSV", "shortDescription" : "", "object" : "nfer\/util\/CSV$.html", "members_class" : [{"label" : "length", "tail" : "(): Int", "member" : "nfer.util.CSV.length", "link" : "nfer\/util\/CSV.html#length:Int", "kind" : "def"}, {"label" : "init", "tail" : "(lines: Stream[List[String]]): Unit", "member" : "nfer.util.CSV.init", "link" : "nfer\/util\/CSV.html#init(lines:Stream[List[String]]):Unit", "kind" : "def"}, {"label" : "Parser", "tail" : "", "member" : "nfer.util.CSV.Parser", "link" : "nfer\/util\/CSV.html#Parser", "kind" : "object"}, {"label" : "rewind", "tail" : "(): Unit", "member" : "nfer.util.CSV.rewind", "link" : "nfer\/util\/CSV.html#rewind():Unit", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[CSVRow]", "member" : "nfer.util.CSV.iterator", "link" : "nfer\/util\/CSV.html#iterator:Iterator[nfer.util.CSVRow]", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Map[String, String]", "member" : "nfer.util.CSV.apply", "link" : "nfer\/util\/CSV.html#apply(i:Int):Map[String,String]", "kind" : "def"}, {"label" : "getKeys", "tail" : "(): List[String]", "member" : "nfer.util.CSV.getKeys", "link" : "nfer\/util\/CSV.html#getKeys:List[String]", "kind" : "def"}, {"label" : "len", "tail" : ": Int", "member" : "nfer.util.CSV.len", "link" : "nfer\/util\/CSV.html#len:Int", "kind" : "var"}, {"label" : "keys", "tail" : ": List[String]", "member" : "nfer.util.CSV.keys", "link" : "nfer\/util\/CSV.html#keys:List[String]", "kind" : "var"}, {"label" : "hdr", "tail" : ": Map[String, Int]", "member" : "nfer.util.CSV.hdr", "link" : "nfer\/util\/CSV.html#hdr:Map[String,Int]", "kind" : "var"}, {"label" : "body", "tail" : ": Stream[CSVRow]", "member" : "nfer.util.CSV.body", "link" : "nfer\/util\/CSV.html#body:Stream[nfer.util.CSVRow]", "kind" : "var"}, {"label" : "pos", "tail" : ": Int", "member" : "nfer.util.CSV.pos", "link" : "nfer\/util\/CSV.html#pos:Int", "kind" : "var"}, {"member" : "nfer.util.CSV#<init>", "error" : "unsupported entity"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[CSVRow, B, CSV.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "nfer\/util\/CSV.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterable.toString", "link" : "nfer\/util\/CSV.html#toString():String", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Iterable.stringPrefix", "link" : "nfer\/util\/CSV.html#stringPrefix:String", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "nfer\/util\/CSV.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): CSV.this.type", "member" : "scala.collection.Iterable.seq", "link" : "nfer\/util\/CSV.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[Iterable]", "member" : "scala.collection.Iterable.iterableFactory", "link" : "nfer\/util\/CSV.html#iterableFactory:scala.collection.IterableFactory[Iterable]", "kind" : "def"}, {"label" : "coll", "tail" : "(): CSV.this.type", "member" : "scala.collection.Iterable.coll", "link" : "nfer\/util\/CSV.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): CSV.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "nfer\/util\/CSV.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Iterable[CSVRow]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "nfer\/util\/CSV.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[CSVRow, Iterable[CSVRow]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "nfer\/util\/CSV.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[CSVRow]): Iterable[CSVRow]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "nfer\/util\/CSV.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.++:", "link" : "nfer\/util\/CSV.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (CSVRow) => U): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.tapEach", "link" : "nfer\/util\/CSV.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[CSVRow]]", "member" : "scala.collection.IterableOps.inits", "link" : "nfer\/util\/CSV.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[CSVRow]]", "member" : "scala.collection.IterableOps.tails", "link" : "nfer\/util\/CSV.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (CSVRow) => (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.IterableOps.unzip3", "link" : "nfer\/util\/CSV.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (CSVRow) => (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.IterableOps.unzip", "link" : "nfer\/util\/CSV.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Iterable[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "nfer\/util\/CSV.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterable[(CSVRow, Int)]", "member" : "scala.collection.IterableOps.zipWithIndex", "link" : "nfer\/util\/CSV.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterable[(CSVRow, B)]", "member" : "scala.collection.IterableOps.zip", "link" : "nfer\/util\/CSV.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.++", "link" : "nfer\/util\/CSV.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.concat", "link" : "nfer\/util\/CSV.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (CSVRow) => Either[A1, A2]): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.IterableOps.partitionMap", "link" : "nfer\/util\/CSV.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[CSVRow, B]): Iterable[B]", "member" : "scala.collection.IterableOps.collect", "link" : "nfer\/util\/CSV.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asIterable: (CSVRow) => IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.flatten", "link" : "nfer\/util\/CSV.html#flatten[B](implicitasIterable:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (CSVRow) => IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.flatMap", "link" : "nfer\/util\/CSV.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (CSVRow) => B): Iterable[B]", "member" : "scala.collection.IterableOps.map", "link" : "nfer\/util\/CSV.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (CSVRow, B) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "nfer\/util\/CSV.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, CSVRow) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scanLeft", "link" : "nfer\/util\/CSV.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scan", "link" : "nfer\/util\/CSV.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (CSVRow) => K)(f: (CSVRow) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "nfer\/util\/CSV.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (CSVRow) => K)(f: (CSVRow) => B): Map[K, Iterable[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "nfer\/util\/CSV.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (CSVRow) => K): Map[K, Iterable[CSVRow]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "nfer\/util\/CSV.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.slice", "link" : "nfer\/util\/CSV.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.init", "link" : "nfer\/util\/CSV.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.tail", "link" : "nfer\/util\/CSV.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[CSVRow]]", "member" : "scala.collection.IterableOps.sliding", "link" : "nfer\/util\/CSV.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[CSVRow]]", "member" : "scala.collection.IterableOps.sliding", "link" : "nfer\/util\/CSV.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[CSVRow]]", "member" : "scala.collection.IterableOps.grouped", "link" : "nfer\/util\/CSV.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (CSVRow) => Boolean): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "nfer\/util\/CSV.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.dropRight", "link" : "nfer\/util\/CSV.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.drop", "link" : "nfer\/util\/CSV.html#drop(n:Int):C", "kind" : "def"}, {"label" : "span", "tail" : "(p: (CSVRow) => Boolean): (Iterable[CSVRow], Iterable[CSVRow])", "member" : "scala.collection.IterableOps.span", "link" : "nfer\/util\/CSV.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (CSVRow) => Boolean): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "nfer\/util\/CSV.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.takeRight", "link" : "nfer\/util\/CSV.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.take", "link" : "nfer\/util\/CSV.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[CSVRow], Iterable[CSVRow])", "member" : "scala.collection.IterableOps.splitAt", "link" : "nfer\/util\/CSV.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (CSVRow) => Boolean): (Iterable[CSVRow], Iterable[CSVRow])", "member" : "scala.collection.IterableOps.partition", "link" : "nfer\/util\/CSV.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (CSVRow) => Boolean): WithFilter[CSVRow, Iterable]", "member" : "scala.collection.IterableOps.withFilter", "link" : "nfer\/util\/CSV.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (CSVRow) => Boolean): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.filterNot", "link" : "nfer\/util\/CSV.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (CSVRow) => Boolean): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.filter", "link" : "nfer\/util\/CSV.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (CSVRow) => Iterable[B]): Iterable[Iterable[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "nfer\/util\/CSV.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[CSVRow]", "member" : "scala.collection.IterableOps.view", "link" : "nfer\/util\/CSV.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "nfer\/util\/CSV.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "nfer\/util\/CSV.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "nfer\/util\/CSV.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "view", "tail" : "(): View[CSVRow]", "member" : "scala.collection.IterableOps.view", "link" : "nfer\/util\/CSV.html#view:scala.collection.View[A]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[CSVRow]", "member" : "scala.collection.IterableOps.lastOption", "link" : "nfer\/util\/CSV.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): CSVRow", "member" : "scala.collection.IterableOps.last", "link" : "nfer\/util\/CSV.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[CSVRow]", "member" : "scala.collection.IterableOps.headOption", "link" : "nfer\/util\/CSV.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): CSVRow", "member" : "scala.collection.IterableOps.head", "link" : "nfer\/util\/CSV.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[Iterable]", "member" : "scala.collection.IterableOps.companion", "link" : "nfer\/util\/CSV.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Iterable[CSVRow]", "member" : "scala.collection.IterableOps.repr", "link" : "nfer\/util\/CSV.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "nfer\/util\/CSV.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[CSVRow]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "nfer\/util\/CSV.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[CSVRow]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "nfer\/util\/CSV.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "nfer\/util\/CSV.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "nfer\/util\/CSV.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[CSVRow]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "nfer\/util\/CSV.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[CSVRow]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "nfer\/util\/CSV.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[CSVRow]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "nfer\/util\/CSV.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "nfer\/util\/CSV.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[CSVRow, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "nfer\/util\/CSV.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[CSVRow]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "nfer\/util\/CSV.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[CSVRow]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "nfer\/util\/CSV.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[CSVRow]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "nfer\/util\/CSV.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[CSVRow, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "nfer\/util\/CSV.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "nfer\/util\/CSV.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "nfer\/util\/CSV.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "nfer\/util\/CSV.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "nfer\/util\/CSV.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "nfer\/util\/CSV.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "nfer\/util\/CSV.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (CSVRow, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "nfer\/util\/CSV.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, CSVRow) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "nfer\/util\/CSV.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[CSVRow, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "nfer\/util\/CSV.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (CSVRow) => B)(cmp: Ordering[B]): Option[CSVRow]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "nfer\/util\/CSV.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (CSVRow) => B)(cmp: Ordering[B]): CSVRow", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "nfer\/util\/CSV.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (CSVRow) => B)(cmp: Ordering[B]): Option[CSVRow]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "nfer\/util\/CSV.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (CSVRow) => B)(cmp: Ordering[B]): CSVRow", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "nfer\/util\/CSV.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[CSVRow]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "nfer\/util\/CSV.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): CSVRow", "member" : "scala.collection.IterableOnceOps.max", "link" : "nfer\/util\/CSV.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[CSVRow]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "nfer\/util\/CSV.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): CSVRow", "member" : "scala.collection.IterableOnceOps.min", "link" : "nfer\/util\/CSV.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "nfer\/util\/CSV.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "nfer\/util\/CSV.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "nfer\/util\/CSV.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "nfer\/util\/CSV.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "nfer\/util\/CSV.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "nfer\/util\/CSV.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "nfer\/util\/CSV.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "nfer\/util\/CSV.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isEmpty", "link" : "nfer\/util\/CSV.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (CSVRow, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "nfer\/util\/CSV.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, CSVRow) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "nfer\/util\/CSV.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (CSVRow, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "nfer\/util\/CSV.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, CSVRow) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "nfer\/util\/CSV.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "nfer\/util\/CSV.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "nfer\/util\/CSV.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "nfer\/util\/CSV.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (CSVRow, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "nfer\/util\/CSV.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, CSVRow) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "nfer\/util\/CSV.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (CSVRow, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "nfer\/util\/CSV.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, CSVRow) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "nfer\/util\/CSV.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (CSVRow) => Boolean): Option[CSVRow]", "member" : "scala.collection.IterableOnceOps.find", "link" : "nfer\/util\/CSV.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (CSVRow) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "nfer\/util\/CSV.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (CSVRow) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "nfer\/util\/CSV.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (CSVRow) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "nfer\/util\/CSV.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (CSVRow) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "nfer\/util\/CSV.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "nfer\/util\/CSV.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "nfer\/util\/CSV.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[CSVRow, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "nfer\/util\/CSV.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nfer\/util\/CSV.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nfer\/util\/CSV.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nfer\/util\/CSV.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nfer\/util\/CSV.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nfer\/util\/CSV.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nfer\/util\/CSV.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nfer\/util\/CSV.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/util\/CSV.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/util\/CSV.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/util\/CSV.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nfer\/util\/CSV.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nfer\/util\/CSV.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nfer\/util\/CSV.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "nfer\/util\/CSV.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nfer\/util\/CSV.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "nfer\/util\/CSV.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nfer\/util\/CSV.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nfer\/util\/CSV.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "writeMap", "tail" : "(m: Map[String, String], keys: List[String], pw: PrintWriter): Unit", "member" : "nfer.util.CSV.writeMap", "link" : "nfer\/util\/CSV$.html#writeMap(m:scala.collection.Map[String,String],keys:List[String],pw:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "parsePath", "tail" : "(fname: String, separator: String): CSV", "member" : "nfer.util.CSV.parsePath", "link" : "nfer\/util\/CSV$.html#parsePath(fname:String,separator:String):nfer.util.CSV", "kind" : "def"}, {"label" : "parseFile", "tail" : "(buf: BufferedSource, separator: String): CSV", "member" : "nfer.util.CSV.parseFile", "link" : "nfer\/util\/CSV$.html#parseFile(buf:scala.io.BufferedSource,separator:String):nfer.util.CSV", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nfer\/util\/CSV$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nfer\/util\/CSV$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nfer\/util\/CSV$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nfer\/util\/CSV$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nfer\/util\/CSV$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nfer\/util\/CSV$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nfer\/util\/CSV$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/util\/CSV$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/util\/CSV$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/util\/CSV$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nfer\/util\/CSV$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nfer\/util\/CSV$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nfer\/util\/CSV$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nfer\/util\/CSV$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "nfer\/util\/CSV$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nfer\/util\/CSV$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "nfer\/util\/CSV$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nfer\/util\/CSV$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nfer\/util\/CSV$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "nfer\/util\/CSV.html", "kind" : "class"}, {"name" : "nfer.util.CSVRow", "shortDescription" : "Created by rjoshi on 3\/23\/16.", "members_case class" : [{"label" : "toMap", "tail" : "(): Map[String, String]", "member" : "nfer.util.CSVRow.toMap", "link" : "nfer\/util\/CSVRow.html#toMap:Map[String,String]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: String): String", "member" : "nfer.util.CSVRow.apply", "link" : "nfer\/util\/CSVRow.html#apply(f:String):String", "kind" : "def"}, {"member" : "nfer.util.CSVRow#<init>", "error" : "unsupported entity"}, {"label" : "body", "tail" : ": List[String]", "member" : "nfer.util.CSVRow.body", "link" : "nfer\/util\/CSVRow.html#body:List[String]", "kind" : "val"}, {"label" : "hdr", "tail" : ": Map[String, Int]", "member" : "nfer.util.CSVRow.hdr", "link" : "nfer\/util\/CSVRow.html#hdr:Map[String,Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "nfer\/util\/CSVRow.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nfer\/util\/CSVRow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nfer\/util\/CSVRow.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nfer\/util\/CSVRow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nfer\/util\/CSVRow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nfer\/util\/CSVRow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nfer\/util\/CSVRow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nfer\/util\/CSVRow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/util\/CSVRow.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/util\/CSVRow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/util\/CSVRow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nfer\/util\/CSVRow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nfer\/util\/CSVRow.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nfer\/util\/CSVRow.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "nfer\/util\/CSVRow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nfer\/util\/CSVRow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nfer\/util\/CSVRow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "nfer\/util\/CSVRow.html", "kind" : "case class"}, {"name" : "nfer.util.JsonReader", "shortDescription" : "Class for reading test files from the MonAmi project,for comparing MonAmi with nfer.", "members_class" : [{"label" : "fromText", "tail" : "(jsonText: StringBuffer): ListBuffer[Interval]", "member" : "nfer.util.JsonReader.fromText", "link" : "nfer\/util\/JsonReader.html#fromText(jsonText:StringBuffer):scala.collection.mutable.ListBuffer[nfer.Interval]", "kind" : "def"}, {"label" : "fromFile", "tail" : "(fileName: String): ListBuffer[Interval]", "member" : "nfer.util.JsonReader.fromFile", "link" : "nfer\/util\/JsonReader.html#fromFile(fileName:String):scala.collection.mutable.ListBuffer[nfer.Interval]", "kind" : "def"}, {"member" : "nfer.util.JsonReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nfer\/util\/JsonReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nfer\/util\/JsonReader.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nfer\/util\/JsonReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nfer\/util\/JsonReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nfer\/util\/JsonReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nfer\/util\/JsonReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nfer\/util\/JsonReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/util\/JsonReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/util\/JsonReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nfer\/util\/JsonReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nfer\/util\/JsonReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nfer\/util\/JsonReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nfer\/util\/JsonReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nfer\/util\/JsonReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "nfer\/util\/JsonReader.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nfer\/util\/JsonReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "nfer\/util\/JsonReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nfer\/util\/JsonReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nfer\/util\/JsonReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "nfer\/util\/JsonReader.html", "kind" : "class"}], "sbt" : []};